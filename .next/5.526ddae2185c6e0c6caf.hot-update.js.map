{"version":3,"sources":["webpack:///./components/SearchSecondary.js?fc81"],"names":["SearchSecondary","autosizeInput","document","querySelector","e","props","searchTerm","filteredContentType","filteredTopic","filteredStatus","preventDefault","console","log","event","dispatch","updateSearchTerm","target","value","array","length","toString","split","join","compiledQuery","compiledFilter","toIsFilter","toInFilter","customWidth","placeholder","apostrophe","trim","onSubmit","searchInput","focus","input","onHandleInputChange","mapStateToProps","state","search","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;IAEMA,e;;;;;;;;;;;wCACgB;AAClBC,MAAA,sDAAAA,CAAcC,SAASC,aAAT,CAAuB,eAAvB,CAAd;AACD;;AAED;;;;6BACSC,C,EAAG;AAAA,mBAKW,KAAKC,KALhB;AAAA,UAERC,UAFQ,UAERA,UAFQ;AAAA,UAGRC,mBAHQ,UAGRA,mBAHQ;AAAA,UAIRC,aAJQ,UAIRA,aAJQ;AAAA,UAKRC,cALQ,UAKRA,cALQ;;;AAOVL,QAAEM,cAAF;AACAC,cAAQC,GAAR,yCACgBN,UADhB,sCAEyBC,mBAFzB,gCAGmBC,aAHnB,iCAIoBC,cAJpB;AAMD;;;wCAEmBI,K,EAAM;AACxB,WAAKR,KAAL,CAAWS,QAAX,CAAoB,iFAAAC,CAAiBF,MAAMG,MAAN,CAAaC,KAA9B,CAApB;AACD;;;+BAEUC,K,EAAM;AACf,UAAGA,SAASA,MAAMC,MAAN,GAAe,CAA3B,EAA6B;AAC3B,0BAAgBD,MAAME,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,IAA5B,CAAiC,IAAjC,CAAhB;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF;;;+BAEUJ,K,EAAM;AACf,UAAGA,SAASA,MAAMC,MAAN,GAAe,CAA3B,EAA6B;AAC3B,0BAAgBD,MAAME,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,IAA5B,CAAiC,IAAjC,CAAhB;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF;;;6BAEQ;AAAA;;AACP,UAAIC,gBAAgB,KAAKlB,KAAL,CAAWC,UAA/B;AACA,UAAIkB,iBAAiB,KAAKC,UAAL,CAAgB,KAAKpB,KAAL,CAAWI,cAA3B,IAA6C,GAA7C,GAAmD,KAAKgB,UAAL,CAAgB,KAAKpB,KAAL,CAAWE,mBAA3B,CAAnD,GAAqG,GAArG,GAA2G,KAAKmB,UAAL,CAAgB,KAAKrB,KAAL,CAAWG,aAA3B,CAAhI;AACAgB,uBAAiBA,eAAeH,KAAf,CAAqB,IAArB,EAA2BC,IAA3B,CAAgC,GAAhC,CAAjB;;AAEA,UAAIK,oBAAJ;AACA,UAAG,CAACJ,cAAcJ,MAAlB,EAAyB;AACvBQ,sBAAc,GAAd;AACD;;AAED,UAAIC,oBAAJ;AAAA,UAAiBC,mBAAjB;AACA,UAAG,CAACL,eAAeM,IAAf,EAAJ,EAA0B;AACxBF,sBAAc,uDAAd;AACD;AACD,UAAG,KAAKvB,KAAL,CAAWC,UAAd,EAAyB;AACvBuB,qBAAY,IAAZ;AACD;;AAED,aACE;AAAA;AAAA;AAAA,uGA6EeF,WA7Ef,aAAe,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,YAAM,UAAU,kBAACvB,CAAD;AAAA,qBAAK,OAAK2B,QAAL,CAAc3B,CAAd,CAAL;AAAA,aAAhB,+FA4EauB,WA5Eb;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,cAAK,SAAS;AAAA,uBAAI,OAAKK,WAAL,CAAiBC,KAAjB,EAAJ;AAAA,eAAd,+FA2EWN,WA3EX,aAAsD,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AAAA;AAAA;AAAA,6GAyESA,WAzET,aAAe,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,mFAAK,KAAI,wFAAT;AAAA,6GAuEOA,WAvEP,aACY,8BADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAKGE,wBALH;AAOE;AAAA;AAAA;AAAA,+GAkEOF,WAlEP,aAAe,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,wBAAK,MADP;AAEE,sBAAG,cAFL;;AAIE,gCAAa,KAJf;AAKE,uBAAK,aAACO,KAAD,EAAW;AAAC,2BAAKF,WAAL,GAAmBE,KAAnB;AAAyB,mBAL5C;AAME,+BAAcN,WANhB;AAOE,4BAAU,kBAACf,KAAD;AAAA,2BAAS,OAAKsB,mBAAL,CAAyBtB,KAAzB,CAAT;AAAA,mBAPZ;AAQE,yBAAOU,aART;AAAA,+GAiEKI,WAjEL,aAGY,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAPF;AAmBGE,wBAnBH;AAAA;AAqBE;AAAA;AAAA;AAAA,+GAoDOF,WApDP,aAAgB,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCH;AAAhC;AArBF,aAFF;AA2BE;AAAA;AAAA,gBAAG,SAAS,iBAACpB,CAAD;AAAA,yBAAK,OAAK2B,QAAL,CAAc3B,CAAd,CAAL;AAAA,iBAAZ,+FAgDSuB,WAhDT,aAA6C,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BF;AADF,SADF;AAAA;AAAA;AAAA,4kDA6EeA,WA7Ef;AAAA,oBA6EeA,WA7Ef;AAAA;AAAA,OADF;AAmHD;;;;;;;;;EA/K2B,gD;;AAkL9B,IAAMS,kBAAkB,SAAlBA,eAAkB,QAAS;AAAA,sBAC0CC,MAAMC,MADhD;AAAA,MACzBhC,UADyB,iBACzBA,UADyB;AAAA,MACbG,cADa,iBACbA,cADa;AAAA,MACGF,mBADH,iBACGA,mBADH;AAAA,MACwBC,aADxB,iBACwBA,aADxB;;AAE/B,SAAQ;AACRF,0BADQ;AAERC,4CAFQ;AAGRC,gCAHQ;AAIRC;AAJQ,GAAR;AAMD,CARD;;eAUe,oEAAA8B,CAAQH,eAAR,EAAyBpC,eAAzB,C;;AAAf;;;;;;;;;;;;0BA5LMA,e;0BAkLAoC,e","file":"5.526ddae2185c6e0c6caf.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { debounce } from 'lodash';\nimport autosizeInput from 'autosize-input';\n\nimport { updateSearchTerm } from '../actions/search';\n\nclass SearchSecondary extends Component {\n  componentDidMount() {\n    autosizeInput(document.querySelector('#search-input'))\n  }\n\n  // XX: On keydown/save click, the following information prints.\n  onSubmit(e) {\n    let { \n      searchTerm,\n      filteredContentType,\n      filteredTopic,\n      filteredStatus } = this.props;\n\n    e.preventDefault();\n    console.log(`Logged Input:, \n      searchTerm: ${searchTerm},\n      filteredContentType: ${filteredContentType},\n      filteredTopic: ${filteredTopic},\n      filteredStatus: ${filteredStatus}`\n    );\n  }\n\n  onHandleInputChange(event){\n    this.props.dispatch(updateSearchTerm(event.target.value));\n  };\n\n  toIsFilter(array){\n    if(array && array.length > 0){\n      return `is: (\"${array.toString().split(\",\").join(\", \")}\")`\n    } else {\n      return '';\n    };\n  };\n\n  toInFilter(array){\n    if(array && array.length > 0){\n      return `in: (\"${array.toString().split(\",\").join(\", \")}\")`\n    } else {\n      return '';\n    };\n  };\n\n  render() {\n    let compiledQuery = this.props.searchTerm;\n    let compiledFilter = this.toIsFilter(this.props.filteredStatus) + \" \" + this.toIsFilter(this.props.filteredContentType) + \" \" + this.toInFilter(this.props.filteredTopic);\n    compiledFilter = compiledFilter.split(\"  \").join(\" \");\n\n    let customWidth;\n    if(!compiledQuery.length){\n      customWidth = \"0\"\n    } \n\n    let placeholder, apostrophe;\n    if(!compiledFilter.trim()){\n      placeholder = \"Search by vehicle, topic, keyword or content title...\";\n    } \n    if(this.props.searchTerm){\n      apostrophe =\"\\\"\";\n    };\n\n    return(\n      <div className=\"container\">\n        <form onSubmit={(e)=>this.onSubmit(e)}>\n          <div onClick={()=>this.searchInput.focus()} className=\"input-wrapper\">\n            \n            <div className=\"input-inner-wrapper\">\n              {/* Temporary use of Search Icon */}\n              <img src=\"https://www.picpng.com/images/small/magnifying-glass-search-loupe-image-download-49863\" \n                className=\"search-icon magnifying-glass\"/>\n              \n              {apostrophe}\n              {/* First Input is the standard text that users could read and type in */}\n              <div className=\"search-input-wrapper\">\n                <input \n                  text=\"text\"\n                  id=\"search-input\"\n                  className=\"search-input\"\n                  autoComplete=\"off\"\n                  ref={(input) => {this.searchInput = input}}\n                  placeholder= {placeholder}\n                  onChange={(event)=>this.onHandleInputChange(event)}\n                  value={compiledQuery}\n                />\n              </div>\n              {apostrophe}&nbsp;\n\n              <span className=\"filter-input\">{compiledFilter}</span>\n                \n            </div>\n\n            <p onClick={(e)=>this.onSubmit(e)} className=\"save-search\">Save</p>\n          </div>\n\n        </form>\n\n        {/* STYLING */}\n        <style jsx>{`\n          .container {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            margin: 16px 0;\n          }\n          .magnifying-glass {\n            max-width: 24px;\n            max-height: 14px;\n            width: auto;\n            height: auto;\n            margin: 0 16px;\n            display: none;\n          }\n          form {\n            display: flex;\n            flex: 1 auto;\n          }\n          .input-wrapper {\n            flex: 1 80%;\n            display: flex;\n            flex-flow: row nowrap;\n            align-items: center;\n            justify-content: space-between;\n            height: 64px;\n            max-width: 600px;\n            background: white;\n            border-radius: 4px;\n            -webkit-box-shadow: 0px 10px 20px 4px rgba(0,0,0,0.15);\n            -moz-box-shadow: 0px 10px 20px 4px rgba(0,0,0,0.15);\n            box-shadow: 0px 10px 20px 4px rgba(0,0,0,0.15);\n          }\n          .input-inner-wrapper {\n            display: flex;\n            align-items: center;\n          }\n          .search-icon {\n            display: flex;\n            margin: 0 12px;\n          }\n          .search-input-wrapper {\n            width: ${customWidth}\n          }\n          .filter-input {\n            font: 400 1em system-ui;\n            white-space: nowrap;\n            overflow: hidden;\n          }\n          input {\n            // flex: 1;\n            padding: 0;\n            border: none;\n            outline: none;\n            font-size: 1em;\n            color: black;\n          }\n          .save-search {\n            position: relative;\n            display: flex;\n            color: rgb(64 102 149);\n            margin-right: 24px;\n            padding-bottom: 4px;\n            min-width: 32px;\n            border-bottom: 1px solid rgb(64 102 149);\n            font: 600 0.875em system-ui;\n            -webkit-box-shadow: -16px 0px 15px -3px rgba(255,255,255,1);\n            -moz-box-shadow: -16px 0px 15px -3px rgba(255,255,255,1);\n            box-shadow: -16px 0px 15px -3px rgba(255,255,255,1);\n              cursor: pointer;\n          }\n          @media all and (min-width: 376px) {\n\n            }\n          }\n        `}\n        </style>\n      </div>      \n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { searchTerm, filteredStatus, filteredContentType, filteredTopic } = state.search;\n  return ({\n  searchTerm,\n  filteredContentType,\n  filteredTopic,\n  filteredStatus,\n  });\n}\n\nexport default connect(mapStateToProps)(SearchSecondary);\n\n\n// WEBPACK FOOTER //\n// ./components/SearchSecondary.js"],"sourceRoot":""}