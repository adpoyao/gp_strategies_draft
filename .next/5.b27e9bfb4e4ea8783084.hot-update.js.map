{"version":3,"sources":["webpack:///./components/Checkbox.js?1f99"],"names":["Checkbox","props","handleClick","e","setState","checked","state","clickAction","target","label","console","log","labelColor","checkMark","fontColor","id","propTypes","PropTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;IAEMA,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAAA,UAcnBC,WAdmB,GAcL,UAACC,CAAD,EAAO;AACnB,YAAKC,QAAL,CAAc,EAACC,SAAS,CAAC,MAAKC,KAAL,CAAWD,OAAtB,EAAd;AACA,UAAI,MAAKJ,KAAL,CAAWM,WAAf,EAA4B;AAC1B,cAAKN,KAAL,CAAWM,WAAX,CAAuB,MAAKN,KAAL,CAAWM,WAAX,CAAuBJ,EAAEK,MAAF,CAASH,OAAhC,EAAyC,MAAKJ,KAAL,CAAWQ,KAApD,CAAvB;AACD;AACF,KAnBkB;;AAGjB,UAAKH,KAAL,GAAa;AACXD,eAAS;AADE,KAAb;AAHiB;AAMlB;;;;yCAEoB;AACnB,UAAI,KAAKJ,KAAL,CAAWI,OAAf,EAAwB;AACtB,aAAKD,QAAL,CAAc,EAACC,SAAS,IAAV,EAAd;AACD;AACF;;;6BASQ;AAAA;;AACPK,cAAQC,GAAR,CAAY,OAAZ,EAAqB,KAAKV,KAA1B;AACA,UAAIW,mBAAJ;AAAA,UAAgBC,kBAAhB;;AAEA,UAAG,KAAKZ,KAAL,CAAWa,SAAd,EAAwB;AACtBF,qBAAa,KAAKX,KAAL,CAAWa,SAAxB;AACD,OAFD,MAEO;AACLF,qBAAa,KAAKN,KAAL,CAAWD,OAAX,GAAqB,OAArB,GAA+B,eAA5C;AACD;;AAED,UAAG,KAAKC,KAAL,CAAWD,OAAd,EAAuB;AACrBQ;AAKD;;AAED,aACE;AAAA;AAAA;AAAA,uGA0BeD,UA1Bf,EA6CQC,SA7CR,aAAe,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,YAA6C,SAAS,KAAKZ,KAAL,CAAWc,EAAjE,+FAyBaH,UAzBb,EA4CMC,SA5CN,aAAiB,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,kBAAK,UADP;AAEE,gBAAI,KAAKZ,KAAL,CAAWc,EAFjB;AAGE,qBAAS,iBAACZ,CAAD;AAAA,qBAAK,OAAKD,WAAL,CAAiBC,CAAjB,CAAL;AAAA,aAHX;AAIE,qBAAS,KAAKG,KAAL,CAAWD,OAJtB;AAAA,yGAwBWO,UAxBX,EA2CIC,SA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOE;AAAA,yGAkBWD,UAlBX,EAqCIC,SArCJ,aAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAQG,eAAKZ,KAAL,CAAWQ;AARd,SADF;AAAA;AAAA;AAAA,4TA0BeG,UA1Bf,mWA6CQC,SA7CR;AAAA,oBA0BeD,UA1Bf,EA6CQC,SA7CR;AAAA;AAAA,OADF;AA0DD;;;;;;;;;EAlGoB,gD;;AAqGvBb,SAASgB,SAAT,GAAqB;AACnBD,MAAI,kDAAAE,CAAUC,MAAV,CAAiBC;AACrB;AACA;AACA;AACA;AALmB,CAArB;;eAQenB,Q;AAAf;;;;;;;;;;;;0BA7GMA,Q","file":"5.b27e9bfb4e4ea8783084.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checked: false\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.checked) {\n      this.setState({checked: true})\n    }\n  }\n\n  handleClick = (e) => {\n    this.setState({checked: !this.state.checked})\n    if (this.props.clickAction) {\n      this.props.clickAction(this.props.clickAction(e.target.checked, this.props.label));\n    }\n  }\n\n  render() {\n    console.log('PROPS', this.props);\n    let labelColor, checkMark;\n    \n    if(this.props.fontColor){\n      labelColor = this.props.fontColor\n    } else {\n      labelColor = this.state.checked ? \"black\" : \"rgb(69 69 69)\";\n    };\n\n    if(this.state.checked) {\n      checkMark = `\n        background-size: 100%;\n        background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Check_mark_23x20_04.svg/1178px-Check_mark_23x20_04.svg.png');\n        background-repeat: no-repeat;\n        background-position: center;`\n    };\n\n    return (\n      <div className=\"control__group container\">\n        <label className=\"control control__checkbox\" htmlFor={this.props.id}>\n          <input \n            type=\"checkbox\" \n            id={this.props.id} \n            onClick={(e)=>this.handleClick(e)} \n            checked={this.state.checked}\n            />\n          <div className=\"control__indicator\"></div>\n          {this.props.label}\n        </label>\n\n        <style jsx>{`\n          .container {\n            font: 400 1em system-ui;\n            color: rgb(64 101 149)            \n          }\n          .control__group {\n            margin-bottom: 32px;\n          }\n          .control__group:last-child {\n            margin-bottom: 0;\n          }\n          .control {\n            display: block;\n            font-size: 1em;\n            color: ${labelColor};\n          }\n          .control:hover{\n            cursor:pointer;\n          }\n          input{\n            position:absolute;\n            visibility: hidden;\n          }\n          .control__indicator{\n            width:20px;\n            height:20px;\n            display:inline-block;\n            margin-right:8px;\n            position:relative;\n            border:1px solid black;\n            border-radius:2px;\n            box-sizing: border-box;\n            vertical-align: middle;\n            ${checkMark}\n          }\n          .control__checkbox {\n            margin: 8px 0;\n          }\n          @media all and (min-width: 376px) {\n            \n          }\n        `}\n        </style>\n      </div>\n    );\n  };\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  // data: PropTypes.object.isRequired,\n  // fontColor: PropTypes.string,\n  // checked: PropTypes.bool,\n  // clickAction: PropTypes.func,\n}\n\nexport default Checkbox;\n\n\n// WEBPACK FOOTER //\n// ./components/Checkbox.js"],"sourceRoot":""}