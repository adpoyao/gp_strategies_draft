{"version":3,"sources":["webpack:///./pages/search-results.js?e20f"],"names":["SearchResults","filterStatus","input","data","undefined","props","dispatch","filterContentType","filterTopic","toggleFavoritedSearch","handleThumbnailClick","modelName","console","log","handleResultClick","result","customFilters","title","options","label","checked","fontColor","clickAction","favoritesDesktop","favoritesMobile","filters","map","index","productThumbnails","resultItems","queryItems","manageSavedSearches","savedSearchListBox","popularSearchListBox","sampleData","products","favorited","savedSearches","contents","savedAndFavs","product","id","topicTags","content","topics","topic","savedSearchProps","shortid","generate","collection","popularSearchProps","path","route","arrow","mapStateToProps","state","withRedux","connect"],"mappings":"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","file":"5.09cad6160b1367f0970d.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Head from 'next/head';\nimport shortid from 'shortid';\n\nimport withRedux from '../lib/withRedux';\nimport Filter from '../components/Filter';\nimport Banner from '../components/Banner';\nimport ListBox from '../components/ListBox';\nimport Checkbox from '../components/Checkbox';\nimport TagSmall from '../components/TagSmall';\nimport PageSection from '../components/PageSection';\nimport BreadCrumbs from '../components/BreadCrumbs';\nimport ResultItemSmall from '../components/ResultItemSmall';\nimport SearchSecondary from '../components/SearchSecondary';\nimport ProductThumbnail from '../components/ProductThumbnail';\n\n\nimport Pagination from '../components/Pagination';\n\nimport * as action from '../actions/search';\n\nclass SearchResults extends Component {\n\n  componentWillUnmount() {\n    this.props.dispatch(action.clearFilters());\n  }\n\n  filterStatus = (input, data) => {\n    if(input !== undefined){\n      input ?\n      this.props.dispatch(action.addStatusFilter(data)) :\n      this.props.dispatch(action.removeStatusFilter(data));\n    };\n  };\n\n  filterContentType = (input,data) => {\n    if(input !== undefined){\n      input ?\n      this.props.dispatch(action.addContentTypeFilter(data)) :\n      this.props.dispatch(action.removeContentTypeFilter(data));\n    };\n  };\n\n  filterTopic = (input, data) => {\n    if(input !== undefined){\n      input ?\n      this.props.dispatch(action.addTopicFilter(data)) :\n      this.props.dispatch(action.removeTopicFilter(data));\n    };\n  };\n\n  toggleFavoritedSearch = (input) => {\n    if(input !== undefined){\n      this.props.dispatch(action.toggleSavedSearch(input));\n    };\n  };\n\n  handleThumbnailClick = (modelName) => (\n    console.log(`Vehicle Thumbnail: ${modelName} clicked.`)\n  );\n\n  handleResultClick = (result) => {\n    console.log(`Result: ${result} clicked.`)\n  };\n\n  render() {  \n\n    // Search results page: custom filters\n    // XX: Make data dynamic once connected to graphQL ~\n    const customFilters = [\n      {\n        title: \"Status\",\n        options:[{\n          label: \"current\",\n          checked: false,\n          fontColor: undefined\n        }, \n        {\n          label: \"archived\",\n          checked: false,\n          fontColor: undefined\n        }],\n        clickAction: this.filterStatus,\n      },\n      {\n        title: \"Content Type\",\n        options: [{\n          label: \"Product\",\n          checked: false,\n          fontColor: undefined\n        },\n        {\n          label: \"Article\",\n          checked: false,\n          fontColor: undefined\n        },\n        {\n          label: \"Document\",\n          checked: false,\n          fontColor: undefined\n        },\n        { \n          label: \"Video\",\n          checked: false,\n          fontColor: undefined\n        },\n        { \n          label: \"Image\",\n          checked: false,\n          fontColor: undefined,\n        }], \n        clickAction: this.filterContentType\n      },\n      {\n        // XX: May need to query for an array of topics on ComponentWillMount();\n        title: \"Topic\",\n        options: [{\n          label: \"technology\",\n          checked: false,\n          fontColor: undefined\n        },\n        {\n          label: \"bluetooth\",\n          checked: false,\n          fontColor: undefined\n        },\n        {\n          label: \"product information\",\n          checked: false,\n          fontColor: undefined\n        }],\n        clickAction: this.filterTopic\n      }\n    ];\n\n    // Favorite Checkbox Props (desktop & mobile);\n    const favoritesDesktop = {\n      label: \"Show only favorites\",\n      fontColor: \"rgb(64 101 149)\",\n      checked: false,\n      clickAction: this.toggleFavoritedSearch,\n    }\n    const favoritesMobile = {\n      label: \"Show Favorites\",\n      fontColor: \"rgb(64 101 149)\",\n      checked: false,\n      clickAction: this.toggleFavoritedSearch,\n    }\n\n    let filters = customFilters.map((data, index) => {\n      return <Filter key={data.title} id={data.title} {...data}/>\n    })\n\n    let productThumbnails, resultItems, queryItems, manageSavedSearches, savedSearchListBox, popularSearchListBox; \n    const { products, favorited, savedSearches, contents, savedAndFavs} = this.props.sampleData;\n    if(products){\n      productThumbnails = products.map(product => {\n        return (\n          <div key={product.id} className=\"products-wrapper\">\n            <ProductThumbnail handleClick={this.handleThumbnailClick} {...product} />\n            <style jsx>{`\n              .products-wrapper {\n                font-size: 16px;\n                margin-bottom: 32px;\n                //XX One car display here\n              }\n              @media all and (min-width: 376px) {\n                .products-wrapper {\n                  width: 220px;\n                  font-size: 17px;\n                }\n              }\n            `}\n            </style>\n          </div>\n        );\n      });\n    };\n\n    if(contents){\n      resultItems = contents.map(content => {\n\n        // XX: Topic tags get generated here. Hardcoded with sample data, need to connect to GraphQL query;\n        let topicTags = content.topics.map(topic => {\n          return ( \n            <div className=\"tag-wrapper\">\n              <TagSmall key={topic.id} {...topic} />\n\n              <style jsx>{`\n                .tag-wrapper {\n                  width: max-content;\n                  margin: 0 4px 0 0;\n                }\n              `}\n              </style>\n            </div>\n          );\n        });\n\n        return (\n          <div key={content.id} className=\"content-wrapper\">\n            <ResultItemSmall key={content.id} handleClick={this.handleResultClick} {...content} />\n            \n            {topicTags}\n\n            <style jsx>{`\n              .content-wrapper {\n                border: 1px solid lightgrey;\n                border-radius: 4px;\n                margin-bottom: 16px;\n                padding: 0 16px;\n                transition: all 0.3s ease;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n              }\n              .content-wrapper:hover {\n                cursor: pointer;\n                transition: all 0.3s ease;\n                -webkit-box-shadow: 0px 10px 10px -6px rgba(0,0,0,0.15);\n                -moz-box-shadow: 0px 10px 10px -6px rgba(0,0,0,0.15);\n                box-shadow: 0px 10px 10px -6px rgba(0,0,0,0.15);\n              }\n            `}\n            </style>\n          </div>\n        );\n      });\n    };\n    \n    //XX: Mock data for now. TODO: change \"collection\" array to query results of user's Saved Searches.\n    if(savedAndFavs) {\n      let savedSearchProps = {\n        id: shortid.generate(),\n        title: 'Saved Searches',\n        collection: savedAndFavs\n      }\n      savedSearchListBox = (\n        <ListBox key={savedAndFavs.id} {...savedSearchProps}/>\n      );\n    }\n\n    //XX: Mock data for now. TODO: change \"collection\" array to query results of Popular Searches.\n    if(savedAndFavs) {\n      let popularSearchProps = {\n        id: shortid.generate(),\n        title: 'People also search for...',\n        collection: savedAndFavs,\n      }\n      popularSearchListBox = (\n        <ListBox key={savedAndFavs.id} {...popularSearchProps}/>\n      );\n    }\n    \n    // Custom path for breadcrumbs. \n    const path = [\n      {\n        title:\"Search\",\n        route: \"/dashboard\",\n        arrow: \">\"\n      },\n      {\n        // XX: Hard coded data for now. Connect with total query result # \n        // and write logic for singluar vs plural (result & results);\n        title: `172 Results`, \n        route: undefined,\n        arrow: undefined\n      }\n    ];\n\n    return(\n      <div className=\"container\">\n        <Head>\n          <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.css\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        </Head>\n\n        <h3>(SEARCH RESULT PAGE)</h3>\n        <Banner>\n          <div className=\"banner-breadcrumbs-wrapper\">\n            <BreadCrumbs paths={path}/>\n          </div>\n\n          <div className=\"banner-content-wrapper\">\n            <SearchSecondary/>\n            <div className=\"filter-wrapper\">\n              <div className=\"desktop-view\"><Checkbox id={favoritesDesktop.label} {...favoritesDesktop}/></div>\n              <div className=\"mobile-view\"><Checkbox id={favoritesMobile.label} {...favoritesMobile}/></div>\n              {filters}\n            </div> \n          </div>\n        </Banner>\n        \n        <PageSection>\n          <div className=\"search-result-wrapper\">\n            {/* Products Section */}\n            <h3 className=\"page-section-header\">Products</h3>\n            <div className=\"vehicle-thumbnails-wrapper\">\n              {productThumbnails}\n            </div>\n\n            {/* Content Section */}\n            <h3 className=\"page-section-header\">Content</h3>\n            <div className=\"contents-wrapper\">\n              <div className=\"result-items-wrapper\">\n                {resultItems}\n                <Pagination/>\n              </div>\n              <div className=\"list-box-wrapper\">\n                <div className=\"list-box\">{savedSearchListBox}</div>\n                <div className=\"list-box\">{popularSearchListBox}</div>\n              </div>\n            \n\n            </div>\n\n          </div>\n          \n        </PageSection>\n\n        <style jsx>{`\n          .desktop-view {\n            display: none;\n          }\n          .mobile-view {\n            margin: 32px 0 -4px;\n          }\n          .page-section-header {\n            font-size: 1.5em;\n            // padding-bottom: 8px;//\n            padding-bottom: 32px;\n            border-bottom: 2px dashed rgb(231, 231, 231);\n          }\n          .banner-breadcrumbs-wrapper {\n            width: 100%;\n          }\n          .banner-content-wrapper{\n            display: flex;\n            flex-flow: column nowrap;\n          }\n          .search-result-wrapper {\n            display: flex;\n            flex-flow: column nowrap;\n          }\n          .vehicle-thumbnails-wrapper {\n            display: flex;\n          }\n          .result-items-wrapper { //\n            display: flex;\n            flex-flow: column nowrap;\n            flex: 1 100%;\n            margin-bottom: 16px;\n          }\n          list-box-wrapper {\n            flex: 1 30%;\n          }\n          .list-box {\n            margin: 0 0 32px 0;\n          }\n\n          @media all and (min-width: 376px) {\n            .desktop-view {\n              display: flex;\n            }\n            .mobile-view {\n              display: none;\n            }\n            .filter-wrapper {\n              display: flex;\n              align-items: center;\n              justify-content: flex-end;\n              width: 100%;\n              min-width: 400px;\n              margin-left: 40px;\n            }\n            .filter-wrapper > * {\n              margin: 0 20px;\n            }\n            .page-section-header {\n              border-bottom: none;\n              padding-bottom: 8px;\n              -webkit-box-shadow: 0px 10px 6px -6px rgba(0,0,0,0.15);\n              -moz-box-shadow: 0px 10px 6px -6px rgba(0,0,0,0.15);\n              box-shadow: 0px 10px 6px -6px rgba(0,0,0,0.15);\n            }\n            .banner-content-wrapper{\n              flex-flow: row nowrap;\n            }\n            .contents-wrapper {\n              display: flex;\n              flex-flow: row nowrap;\n            }\n            .result-items-wrapper {\n              margin: 0 32px 16px 0\n            }\n          }\n        `}\n        </style>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  sampleData: state.sampleData\n})\n\nexport default withRedux(connect(mapStateToProps)(SearchResults));\n\n\n// WEBPACK FOOTER //\n// ./pages/search-results.js"],"sourceRoot":""}